# Generated by Django 5.2.1 on 2025-06-13 11:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import web_site.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('ordre_affichage', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('poste', models.CharField(max_length=150)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=web_site.models.upload_equipe_photo)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('affiche_public', models.BooleanField(default=True)),
                ('ordre_affichage', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Membre équipe',
                'verbose_name_plural': 'Équipe',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cle', models.CharField(max_length=100, unique=True)),
                ('valeur', models.TextField()),
                ('type_donnee', models.CharField(choices=[('STRING', 'Texte'), ('NUMBER', 'Nombre'), ('BOOLEAN', 'Booléen'), ('JSON', 'JSON'), ('EMAIL', 'Email'), ('URL', 'URL')], default='STRING', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Paramètre',
                'verbose_name_plural': 'Paramètres',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom_complet', models.CharField(blank=True, max_length=200)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('CLIENT', 'Client'), ('ADMIN', 'Administrateur')], default='CLIENT', max_length=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='web_site_user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_commande', models.CharField(editable=False, max_length=50, unique=True)),
                ('nom_client', models.CharField(max_length=200)),
                ('email_client', models.EmailField(max_length=254)),
                ('telephone_client', models.CharField(max_length=20)),
                ('adresse_livraison', models.TextField()),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('CONFIRMEE', 'Confirmée'), ('EN_PRODUCTION', 'En production'), ('PRETE', 'Prête'), ('LIVREE', 'Livrée'), ('ANNULEE', 'Annulée')], default='EN_ATTENTE', max_length=15)),
                ('total_ht', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_ttc', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('taux_tva', models.DecimalField(decimal_places=2, default=20.0, max_digits=5)),
                ('date_commande', models.DateTimeField(auto_now_add=True)),
                ('date_livraison_prevue', models.DateTimeField(blank=True, null=True)),
                ('date_livraison_reelle', models.DateTimeField(blank=True, null=True)),
                ('notes_client', models.TextField(blank=True)),
                ('notes_admin', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commandes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_commande'],
            },
        ),
        migrations.CreateModel(
            name='CommandeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('options_selectionnees', models.JSONField(blank=True, help_text='Options choisies par le client', null=True)),
                ('instructions_speciales', models.TextField(blank=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='web_site.commande')),
            ],
            options={
                'verbose_name': 'Article de commande',
                'verbose_name_plural': 'Articles de commande',
            },
        ),
        migrations.CreateModel(
            name='Fichier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_original', models.CharField(max_length=255)),
                ('fichier', models.FileField(upload_to=web_site.models.upload_client_file)),
                ('type_mime', models.CharField(max_length=100)),
                ('taille_octets', models.BigIntegerField()),
                ('hash_fichier', models.CharField(blank=True, max_length=64)),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('commande_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='web_site.commandeitem')),
            ],
            options={
                'verbose_name': 'Fichier',
                'verbose_name_plural': 'Fichiers',
            },
        ),
        migrations.CreateModel(
            name='RDV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_client', models.CharField(max_length=200)),
                ('telephone_client', models.CharField(max_length=20)),
                ('email_client', models.EmailField(max_length=254)),
                ('date_rdv', models.DateTimeField()),
                ('duree_minutes', models.PositiveIntegerField(default=30)),
                ('type_rdv', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('DEVIS', 'Devis'), ('FORMATION', 'Formation'), ('AUTRE', 'Autre')], max_length=15)),
                ('motif', models.TextField()),
                ('statut', models.CharField(choices=[('PROGRAMME', 'Programmé'), ('CONFIRME', 'Confirmé'), ('REPORTE', 'Reporté'), ('ANNULE', 'Annulé'), ('TERMINE', 'Terminé')], default='PROGRAMME', max_length=10)),
                ('notes_admin', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rdvs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['date_rdv'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unite_mesure', models.CharField(help_text='A4, A3, m², pièce, etc.', max_length=50)),
                ('specifications_techniques', models.TextField(blank=True)),
                ('disponible', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=web_site.models.upload_service_image)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='services', to='web_site.categorie')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Realisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('client', models.CharField(blank=True, help_text='Nom du client (optionnel)', max_length=200)),
                ('image_principale', models.ImageField(upload_to=web_site.models.upload_realisation_image)),
                ('images_galerie', models.JSONField(blank=True, help_text='URLs des images supplémentaires de la galerie', null=True)),
                ('date_realisation', models.DateField()),
                ('duree_projet', models.CharField(blank=True, help_text='Ex: 3 jours, 1 semaine', max_length=100)),
                ('cout_projet', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('difficulte', models.CharField(choices=[('FACILE', 'Facile'), ('MOYEN', 'Moyen'), ('DIFFICILE', 'Difficile'), ('EXPERT', 'Expert')], default='MOYEN', max_length=20)),
                ('technologies_utilisees', models.TextField(blank=True, help_text='Matériaux, techniques utilisées')),
                ('visible_public', models.BooleanField(default=True)),
                ('ordre_affichage', models.PositiveIntegerField(default=0)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('services_utilises', models.ManyToManyField(blank=True, related_name='realisations', to='web_site.service')),
            ],
            options={
                'verbose_name': 'Réalisation',
                'verbose_name_plural': 'Réalisations',
                'ordering': ['ordre_affichage', '-date_realisation'],
            },
        ),
        migrations.AddField(
            model_name='commandeitem',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_site.service'),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_client', models.CharField(max_length=200)),
                ('email_client', models.EmailField(blank=True, max_length=254)),
                ('note', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('commentaire', models.TextField()),
                ('approuve', models.BooleanField(default=False)),
                ('affiche_public', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Témoignage',
                'verbose_name_plural': 'Témoignages',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ServiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_option', models.CharField(help_text='couleur, format, qualité, etc.', max_length=100)),
                ('type_option', models.CharField(choices=[('SELECT', 'Liste déroulante'), ('CHECKBOX', 'Case à cocher'), ('TEXT', 'Champ texte'), ('NUMBER', 'Nombre'), ('RADIO', 'Bouton radio')], max_length=10)),
                ('valeurs_possibles', models.JSONField(blank=True, help_text="Format JSON: {'options': ['Rouge', 'Bleu', 'Vert']}", null=True)),
                ('obligatoire', models.BooleanField(default=False)),
                ('prix_supplementaire', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='web_site.service')),
            ],
            options={
                'verbose_name': 'Détail de service',
                'verbose_name_plural': 'Détails de services',
                'unique_together': {('service', 'nom_option')},
            },
        ),
    ]
